##############################################################################
## Provision replication
## This role executes much of the needed functionality to provision an
## application using an Ansible Playbook Bundle.  Included in the comments
## below are some sample resources for getting started deploying an application
## to OpenShift.
##############################################################################
- include: "login.yml"

- name: Create Service Account
  k8s_v1_service_account:
    name: '{{ galera_database }}-operator'
    namespace: '{{ namespace }}'

- name: Add Privileged Policy
  command: "oc adm policy add-scc-to-user nonroot -z {{ galera_database }}-operator -n {{ namespace }}"
  when: openshift==true

- name: RBAC - Create operator role
  k8s_v1beta1_role:
    name: '{{ namespace }}-operator-role'
    namespace: '{{ namespace }}'
    rules:
    - api_groups: [clusterlabs.org]
      resources: [replicatedstatefulsets]
      verbs: ["*"]
    - api_groups: [apiextensions.k8s.io]
      resources: [customresourcedefinitions]
      verbs: ["*"]
    - api_groups: [""]
      resources:
      - pods
      - pods/exec
      - secrets
      - services
      - endpoints
      - configmaps
      - persistentvolumeclaims
      - events
      verbs:
      - "*"
    - api_groups: [apps]
      resources:
      - deployments
      - statefulsets
      verbs: ["*"]

# openshift_v1_role_binding
- name: RBAC - Create operator binding
  k8s_v1beta1_role_binding:
    name: '{{ namespace }}-operator-binding'
    namespace: '{{ namespace }}'
    role_ref_kind: Role
    role_ref_api_group: rbac.authorization.k8s.io
    role_ref_name: '{{ namespace }}-operator-role'
    subjects:
    - kind: Group
      name: system:serviceaccount:{{ namespace }}
    - kind: ServiceAccount
      name: '{{ galera_database }}-operator'
      namespace: '{{ namespace }}'

#
#- name: Create Role Binding
#  openshift_v1_role_binding:
#    namespace: '{{ namespace }}'
#    name: '{{ application_name }}'
#    user_names:
#      - system:serviceaccount:{{ Namespace }}:{{ galera_database }}-operator }}
#    role_ref_name: "view"
#    subjects:            
#    - kind: ServiceAccount
#      name: '{{ application_name }}'
#      namespace: '{{ namespace }}'

##############################################################################
## Create the CRD now so that we don't need a cluster-role{-binding} to allow
## the operator to do it
##############################################################################
- name: Create Replication CRD
  k8s_v1beta1_custom_resource_definition:
    name: replicatedstatefulsets.clusterlabs.org
    state: present
    spec_version: v1alpha1
    spec_scope: Namespaced
    spec_group: clusterlabs.org
    spec_names_kind: ReplicatedStatefulSet
    spec_names_singular: replicatedstatefulset
    spec_names_plural: replicatedstatefulsets
    spec_names_list_kind: ReplicatedStatefulSetList
    spec_names_short_names:
    - rss

##############################################################################
## An OpenShift Origin deployment configuration provides a replication
## controller, spins up pods, and also provides the ability to transition from
## one deployment of an image to a new one.
## https://docs.openshift.org/latest/architecture/core_concepts/deployments.html#deployments-and-deployment-configurations
##############################################################################
- name: Create operator deployment config
  openshift_v1_deployment_config:
    name: replication-operator
    namespace: '{{ namespace }}'
    labels:
      app: replication-operator
      service: replication-operator
    replicas: 1
    strategy_type: Recreate
    selector:
      app: replication-operator
      service: replication-operator
    spec_template_spec_service_account_name: '{{ galera_database }}-operator'
    spec_template_metadata_labels:
      app: replication-operator
      service: replication-operator
    containers:
      - image: quay.io/beekhof/rss-operator:latest
        command: [ "/usr/local/bin/rss-operator", "-alsologtostderr", "-create-crd=false"]
        name: rss-operator
        env:
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: POD_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.name


##############################################################################
## Create a Galera cluster
## 
## 
##############################################################################
#- name: Create PVC for persistent deployment
#  k8s_v1_persistent_volume_claim:
#    name: '{{ galera_database }}'
#    namespace: '{{ namespace }}'
#    access_modes:
#      - ReadWriteOnce
#    resources_requests:
#      storage: '{{ volume_size }}G'
#    state: '{{ state }}'
#  async: 180
#  poll: 0
#  register: create_pvc
#  when: _apb_plan_id == "persistent"


- name: Create {{ _apb_plan_id }} Galera deployment
  template:
    src: 'galera-{{  _apb_plan_id }}.j2'
    dest: '/tmp/cluster.yaml'

- name: Create Galera cluster
  command: "oc apply -f /tmp/cluster.yaml"


##############################################################################
## A Kubernetes service serves as an internal load balancer.  It identifies a
## set of replicated pods in order to proxy the connections it receives to them.
## https://docs.openshift.org/latest/architecture/core_concepts/pods_and_services.html#services
##############################################################################
#- name: create replication service
#  k8s_v1_service:
#    name: replication
#    namespace: '{{ namespace }}'
#    labels:
#      app: replication
#      service: replication
#    selector:
#      app: replication
#      service: replication
#    ports:
#      - name: web
#        port: 80
#        target_port: 8080


##############################################################################
## An OpenShift Origin route exposes a service at a host name, so that external
## clients can reach it by name. Each route consists of a name, a service
## selector, and an optional security configuration.
## https://docs.openshift.org/latest/architecture/core_concepts/routes.html
##############################################################################
#- name: create replication route
#  openshift_v1_route:
#    name: replication
#    namespace: '{{ namespace }}'
#    labels:
#      app: replication
#      service: replication
#    to_name: replication
#    spec_port_target_port: web

##############################################################################
## Bindable services must make credentials available to the Ansible Service
## Broker during the provision stage.  They will later be made available to
## applications after a binding is created.
## https://github.com/kubernetes-incubator/service-catalog/blob/master/docs/design.md#using-a-service-instance
##############################################################################
#- name: encode bind credentials
#  asb_encode_binding:
#    fields:
#      DB_TYPE: galera
#      DB_HOST: my-pg
#      DB_PORT: "5432"
#      DB_NAME: "{{ galera_database }}"
#      DB_USER: "{{ galera_user }}"
#      DB_PASSWORD: "{{ galera_password }}"
